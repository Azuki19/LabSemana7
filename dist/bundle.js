(()=>{"use strict";const t=t=>{return e=void 0,n=void 0,i=function*(){try{return yield fetch(`https://rickandmortyapi.com/api/character/${t}`).then((t=>t.json()))}catch(t){console.error(t)}},new((s=void 0)||(s=Promise))((function(t,o){function r(t){try{c(i.next(t))}catch(t){o(t)}}function a(t){try{c(i.throw(t))}catch(t){o(t)}}function c(e){var n;e.done?t(e.value):(n=e.value,n instanceof s?n:new s((function(t){t(n)}))).then(r,a)}c((i=i.apply(e,n||[])).next())}));var e,n,s,i};var e;!function(t){t.image="image",t.name="name",t.status="status",t.species="species",t.type="type",t.origin="origin",t.episode="episode"}(e||(e={}));class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get observedAttributes(){return Object.keys({image:null,name:null,status:null,species:null,type:null,origin:null,episode:null})}connectedCallback(){this.render()}attributeChangedCallback(t,e,n){this[t]=n,this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML=`\n\t\t\t\t\t<link rel="stylesheet" href="../src/components/character/character.css">\n\t\t\t\t\t<section id="container">\n\t\t\t\t\t<img src="${this.image}"></img>\n\t\t\t\t\t<h1>${this.name}</h1>\n\t\t\t\t\t<p>Status: ${this.status}</p>\n\t\t\t\t\t<p>Species: ${this.species}</p>\n\t\t\t\t\t<p>Type:  ${this.type?this.type:"Normal"}</p>\n\t\t\t\t\t<p>Origin: ${this.origin}</p>\n\t\t\t\t\t<p>Name of first episode: ${this.episode}</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t`)}}customElements.define("my-characters",n);var s=function(t,e,n,s){return new(n||(n=Promise))((function(i,o){function r(t){try{c(s.next(t))}catch(t){o(t)}}function a(t){try{c(s.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}c((s=s.apply(t,e||[])).next())}))};class i extends HTMLElement{constructor(){super(),this.characters=[],this.attachShadow({mode:"open"})}connectedCallback(){return s(this,void 0,void 0,(function*(){var e,n,i;const o=document.createElement("input");o.id="numCharactersInput",o.type="number",o.placeholder="Número de personajes",null===(e=this.shadowRoot)||void 0===e||e.appendChild(o);const r=document.createElement("button");r.textContent="Submit",r.id="submitButton",null===(n=this.shadowRoot)||void 0===n||n.appendChild(r);const a=null===(i=this.shadowRoot)||void 0===i?void 0:i.getElementById("submitButton");null==a||a.addEventListener("click",(()=>s(this,void 0,void 0,(function*(){var e;try{const n=null===(e=this.shadowRoot)||void 0===e?void 0:e.getElementById("numCharactersInput"),s=parseInt(n.value);if(isNaN(s))alert("Por favor ingrese un número válido");else{this.characters=[];for(let e=1;e<=s;e++){const n=yield t(e);this.render(n)}}}catch(t){console.error("Error:",t)}}))))}))}render(t){const n=this.ownerDocument.createElement("my-characters");n.setAttribute(e.image,t.image),n.setAttribute(e.name,t.name),n.setAttribute(e.status,t.status),n.setAttribute(e.species,t.species),n.setAttribute(e.type,t.type),n.setAttribute(e.origin,t.origin.name),n.setAttribute(e.episode,t.episode),this.characters.push(n),this.shadowRoot&&(this.shadowRoot.innerHTML="",this.characters.forEach((t=>{var e;null===(e=this.shadowRoot)||void 0===e||e.appendChild(t.cloneNode(!0))})))}}customElements.define("app-container",i)})();